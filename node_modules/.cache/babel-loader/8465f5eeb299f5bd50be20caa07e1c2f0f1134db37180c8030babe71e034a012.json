{"ast":null,"code":"var _jsxFileName = \"/Users/n.hnid/Desktop/Master/QRScannerTest/src/components/QRScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport QrScanner from 'qr-scanner';\nimport './QRScanner.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRScanner = () => {\n  _s();\n  const [scannedData, setScannedData] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [error, setError] = useState('');\n  const videoRef = useRef(null);\n  const qrScannerRef = useRef(null);\n  useEffect(() => {\n    return () => {\n      // Cleanup scanner on component unmount\n      if (qrScannerRef.current) {\n        qrScannerRef.current.stop();\n        qrScannerRef.current.destroy();\n      }\n    };\n  }, []);\n  const startScanning = async () => {\n    try {\n      setError('');\n      setIsScanning(true);\n\n      // Check if camera is available\n      const hasCamera = await QrScanner.hasCamera();\n      if (!hasCamera) {\n        throw new Error('No camera found on this device');\n      }\n\n      // Initialize QR scanner\n      qrScannerRef.current = new QrScanner(videoRef.current, result => {\n        setScannedData(result.data);\n        stopScanning();\n      }, {\n        onDecodeError: error => {\n          // Ignore decode errors while scanning\n          console.log('Decode error:', error);\n        },\n        highlightScanRegion: true,\n        highlightCodeOutline: true\n      });\n      await qrScannerRef.current.start();\n    } catch (err) {\n      setError(`Failed to start camera: ${err.message}`);\n      setIsScanning(false);\n    }\n  };\n  const stopScanning = () => {\n    if (qrScannerRef.current) {\n      qrScannerRef.current.stop();\n    }\n    setIsScanning(false);\n  };\n  const clearResult = () => {\n    setScannedData('');\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qr-scanner-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanner-controls\",\n      children: [!isScanning ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startScanning,\n        className: \"scan-button\",\n        children: \"Start Scanning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopScanning,\n        className: \"stop-button\",\n        children: \"Stop Scanning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this), (scannedData || error) && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearResult,\n        className: \"clear-button\",\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), isScanning && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        className: \"scanner-video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scanner-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scanner-frame\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"scanning-text\",\n        children: \"Position the QR code within the frame\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 9\n    }, this), scannedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Scanned Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: scannedData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 11\n      }, this), scannedData.startsWith('http') && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: scannedData,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"link-button\",\n        children: \"Open Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"F7qsv926gBZigtq8Fd/uBpd4rSk=\");\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","useRef","useEffect","QrScanner","jsxDEV","_jsxDEV","QRScanner","_s","scannedData","setScannedData","isScanning","setIsScanning","error","setError","videoRef","qrScannerRef","current","stop","destroy","startScanning","hasCamera","Error","result","data","stopScanning","onDecodeError","console","log","highlightScanRegion","highlightCodeOutline","start","err","message","clearResult","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","startsWith","href","target","rel","_c","$RefreshReg$"],"sources":["/Users/n.hnid/Desktop/Master/QRScannerTest/src/components/QRScanner.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport QrScanner from 'qr-scanner';\nimport './QRScanner.css';\n\nconst QRScanner = () => {\n  const [scannedData, setScannedData] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [error, setError] = useState('');\n  const videoRef = useRef(null);\n  const qrScannerRef = useRef(null);\n\n  useEffect(() => {\n    return () => {\n      // Cleanup scanner on component unmount\n      if (qrScannerRef.current) {\n        qrScannerRef.current.stop();\n        qrScannerRef.current.destroy();\n      }\n    };\n  }, []);\n\n  const startScanning = async () => {\n    try {\n      setError('');\n      setIsScanning(true);\n\n      // Check if camera is available\n      const hasCamera = await QrScanner.hasCamera();\n      if (!hasCamera) {\n        throw new Error('No camera found on this device');\n      }\n\n      // Initialize QR scanner\n      qrScannerRef.current = new QrScanner(\n        videoRef.current,\n        (result) => {\n          setScannedData(result.data);\n          stopScanning();\n        },\n        {\n          onDecodeError: (error) => {\n            // Ignore decode errors while scanning\n            console.log('Decode error:', error);\n          },\n          highlightScanRegion: true,\n          highlightCodeOutline: true,\n        }\n      );\n\n      await qrScannerRef.current.start();\n    } catch (err) {\n      setError(`Failed to start camera: ${err.message}`);\n      setIsScanning(false);\n    }\n  };\n\n  const stopScanning = () => {\n    if (qrScannerRef.current) {\n      qrScannerRef.current.stop();\n    }\n    setIsScanning(false);\n  };\n\n  const clearResult = () => {\n    setScannedData('');\n    setError('');\n  };\n\n  return (\n    <div className=\"qr-scanner-container\">\n      <div className=\"scanner-controls\">\n        {!isScanning ? (\n          <button onClick={startScanning} className=\"scan-button\">\n            Start Scanning\n          </button>\n        ) : (\n          <button onClick={stopScanning} className=\"stop-button\">\n            Stop Scanning\n          </button>\n        )}\n        \n        {(scannedData || error) && (\n          <button onClick={clearResult} className=\"clear-button\">\n            Clear\n          </button>\n        )}\n      </div>\n\n      {isScanning && (\n        <div className=\"video-container\">\n          <video ref={videoRef} className=\"scanner-video\"></video>\n          <div className=\"scanner-overlay\">\n            <div className=\"scanner-frame\"></div>\n          </div>\n          <p className=\"scanning-text\">Position the QR code within the frame</p>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"error-message\">\n          <h3>Error</h3>\n          <p>{error}</p>\n        </div>\n      )}\n\n      {scannedData && (\n        <div className=\"result-container\">\n          <h3>Scanned Content:</h3>\n          <div className=\"result-content\">\n            <p>{scannedData}</p>\n          </div>\n          {scannedData.startsWith('http') && (\n            <a \n              href={scannedData} \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"link-button\"\n            >\n              Open Link\n            </a>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default QRScanner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}