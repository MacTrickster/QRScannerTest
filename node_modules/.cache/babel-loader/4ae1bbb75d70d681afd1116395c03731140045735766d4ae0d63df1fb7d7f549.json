{"ast":null,"code":"var _jsxFileName = \"/Users/n.hnid/Desktop/Master/QRScannerTest/src/components/QRScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport QrScanner from 'qr-scanner';\nimport './QRScanner.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRScanner = () => {\n  _s();\n  const [scannedData, setScannedData] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [error, setError] = useState('');\n  const [cameras, setCameras] = useState([]);\n  const [selectedCamera, setSelectedCamera] = useState('');\n  const videoRef = useRef(null);\n  const qrScannerRef = useRef(null);\n  useEffect(() => {\n    // Load available cameras on component mount\n    loadCameras();\n    return () => {\n      // Cleanup scanner on component unmount\n      if (qrScannerRef.current) {\n        qrScannerRef.current.stop();\n        qrScannerRef.current.destroy();\n      }\n    };\n  }, []);\n  const loadCameras = async () => {\n    try {\n      const availableCameras = await QrScanner.listCameras(true);\n      setCameras(availableCameras);\n      if (availableCameras.length > 0) {\n        // Prefer back camera (environment) if available, otherwise use first camera\n        const backCamera = availableCameras.find(camera => camera.label.toLowerCase().includes('back') || camera.label.toLowerCase().includes('environment'));\n        setSelectedCamera(backCamera ? backCamera.id : availableCameras[0].id);\n      }\n    } catch (err) {\n      console.log('Could not load cameras:', err);\n    }\n  };\n  const startScanning = async () => {\n    try {\n      setError('');\n      setIsScanning(true);\n\n      // Check if camera is available\n      const hasCamera = await QrScanner.hasCamera();\n      if (!hasCamera) {\n        throw new Error('No camera found on this device');\n      }\n\n      // Initialize QR scanner with selected camera\n      qrScannerRef.current = new QrScanner(videoRef.current, result => {\n        setScannedData(result.data);\n        stopScanning();\n      }, {\n        onDecodeError: error => {\n          // Ignore decode errors while scanning\n          console.log('Decode error:', error);\n        },\n        highlightScanRegion: true,\n        highlightCodeOutline: true,\n        preferredCamera: selectedCamera || 'environment'\n      });\n      await qrScannerRef.current.start();\n    } catch (err) {\n      setError(`Failed to start camera: ${err.message}`);\n      setIsScanning(false);\n    }\n  };\n  const stopScanning = () => {\n    if (qrScannerRef.current) {\n      qrScannerRef.current.stop();\n    }\n    setIsScanning(false);\n  };\n  const switchCamera = async cameraId => {\n    const wasScanning = isScanning;\n    if (wasScanning) {\n      stopScanning();\n    }\n    setSelectedCamera(cameraId);\n    if (wasScanning) {\n      // Small delay to ensure the previous scanner is fully stopped\n      setTimeout(() => {\n        startScanning();\n      }, 100);\n    }\n  };\n  const clearResult = () => {\n    setScannedData('');\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qr-scanner-container\",\n    children: [cameras.length > 1 && !isScanning && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"camera-select\",\n        children: \"Choose Camera:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"camera-select\",\n        value: selectedCamera,\n        onChange: e => switchCamera(e.target.value),\n        className: \"camera-select\",\n        children: cameras.map(camera => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: camera.id,\n          children: camera.label || `Camera ${camera.id}`\n        }, camera.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanner-controls\",\n      children: [!isScanning ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startScanning,\n        className: \"scan-button\",\n        children: \"Start Scanning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopScanning,\n        className: \"stop-button\",\n        children: \"Stop Scanning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this), (scannedData || error) && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearResult,\n        className: \"clear-button\",\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), isScanning && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        className: \"scanner-video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scanner-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scanner-frame\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 9\n    }, this), scannedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Scanned Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: scannedData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), scannedData.startsWith('http') && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: scannedData,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"link-button\",\n        children: \"Open Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"hqOszwnXkTVPoHnTgLzR2xYc5gY=\");\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","useRef","useEffect","QrScanner","jsxDEV","_jsxDEV","QRScanner","_s","scannedData","setScannedData","isScanning","setIsScanning","error","setError","cameras","setCameras","selectedCamera","setSelectedCamera","videoRef","qrScannerRef","loadCameras","current","stop","destroy","availableCameras","listCameras","length","backCamera","find","camera","label","toLowerCase","includes","id","err","console","log","startScanning","hasCamera","Error","result","data","stopScanning","onDecodeError","highlightScanRegion","highlightCodeOutline","preferredCamera","start","message","switchCamera","cameraId","wasScanning","setTimeout","clearResult","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","map","onClick","ref","startsWith","href","rel","_c","$RefreshReg$"],"sources":["/Users/n.hnid/Desktop/Master/QRScannerTest/src/components/QRScanner.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport QrScanner from 'qr-scanner';\nimport './QRScanner.css';\n\nconst QRScanner = () => {\n  const [scannedData, setScannedData] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [error, setError] = useState('');\n  const [cameras, setCameras] = useState([]);\n  const [selectedCamera, setSelectedCamera] = useState('');\n  const videoRef = useRef(null);\n  const qrScannerRef = useRef(null);\n\n  useEffect(() => {\n    // Load available cameras on component mount\n    loadCameras();\n    \n    return () => {\n      // Cleanup scanner on component unmount\n      if (qrScannerRef.current) {\n        qrScannerRef.current.stop();\n        qrScannerRef.current.destroy();\n      }\n    };\n  }, []);\n\n  const loadCameras = async () => {\n    try {\n      const availableCameras = await QrScanner.listCameras(true);\n      setCameras(availableCameras);\n      if (availableCameras.length > 0) {\n        // Prefer back camera (environment) if available, otherwise use first camera\n        const backCamera = availableCameras.find(camera => \n          camera.label.toLowerCase().includes('back') || \n          camera.label.toLowerCase().includes('environment')\n        );\n        setSelectedCamera(backCamera ? backCamera.id : availableCameras[0].id);\n      }\n    } catch (err) {\n      console.log('Could not load cameras:', err);\n    }\n  };\n\n  const startScanning = async () => {\n    try {\n      setError('');\n      setIsScanning(true);\n\n      // Check if camera is available\n      const hasCamera = await QrScanner.hasCamera();\n      if (!hasCamera) {\n        throw new Error('No camera found on this device');\n      }\n\n      // Initialize QR scanner with selected camera\n      qrScannerRef.current = new QrScanner(\n        videoRef.current,\n        (result) => {\n          setScannedData(result.data);\n          stopScanning();\n        },\n        {\n          onDecodeError: (error) => {\n            // Ignore decode errors while scanning\n            console.log('Decode error:', error);\n          },\n          highlightScanRegion: true,\n          highlightCodeOutline: true,\n          preferredCamera: selectedCamera || 'environment',\n        }\n      );\n\n      await qrScannerRef.current.start();\n    } catch (err) {\n      setError(`Failed to start camera: ${err.message}`);\n      setIsScanning(false);\n    }\n  };\n\n  const stopScanning = () => {\n    if (qrScannerRef.current) {\n      qrScannerRef.current.stop();\n    }\n    setIsScanning(false);\n  };\n\n  const switchCamera = async (cameraId) => {\n    const wasScanning = isScanning;\n    if (wasScanning) {\n      stopScanning();\n    }\n    setSelectedCamera(cameraId);\n    if (wasScanning) {\n      // Small delay to ensure the previous scanner is fully stopped\n      setTimeout(() => {\n        startScanning();\n      }, 100);\n    }\n  };\n\n  const clearResult = () => {\n    setScannedData('');\n    setError('');\n  };\n\n  return (\n    <div className=\"qr-scanner-container\">\n      {/* Camera Selection */}\n      {cameras.length > 1 && !isScanning && (\n        <div className=\"camera-selection\">\n          <label htmlFor=\"camera-select\">Choose Camera:</label>\n          <select\n            id=\"camera-select\"\n            value={selectedCamera}\n            onChange={(e) => switchCamera(e.target.value)}\n            className=\"camera-select\"\n          >\n            {cameras.map((camera) => (\n              <option key={camera.id} value={camera.id}>\n                {camera.label || `Camera ${camera.id}`}\n              </option>\n            ))}\n          </select>\n        </div>\n      )}\n\n      <div className=\"scanner-controls\">\n        {!isScanning ? (\n          <button onClick={startScanning} className=\"scan-button\">\n            Start Scanning\n          </button>\n        ) : (\n          <button onClick={stopScanning} className=\"stop-button\">\n            Stop Scanning\n          </button>\n        )}\n        \n        {(scannedData || error) && (\n          <button onClick={clearResult} className=\"clear-button\">\n            Clear\n          </button>\n        )}\n      </div>\n\n      {isScanning && (\n        <div className=\"video-container\">\n          <video ref={videoRef} className=\"scanner-video\"></video>\n          <div className=\"scanner-overlay\">\n            <div className=\"scanner-frame\"></div>\n          </div>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"error-message\">\n          <h3>Error</h3>\n          <p>{error}</p>\n        </div>\n      )}\n\n      {scannedData && (\n        <div className=\"result-container\">\n          <h3>Scanned Content:</h3>\n          <div className=\"result-content\">\n            <p>{scannedData}</p>\n          </div>\n          {scannedData.startsWith('http') && (\n            <a \n              href={scannedData} \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"link-button\"\n            >\n              Open Link\n            </a>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default QRScanner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}