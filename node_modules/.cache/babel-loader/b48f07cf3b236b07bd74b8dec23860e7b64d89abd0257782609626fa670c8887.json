{"ast":null,"code":"var _jsxFileName = \"/Users/n.hnid/Desktop/Master/QRScannerTest/src/components/QRScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport QrScanner from 'qr-scanner';\nimport './QRScanner.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRScanner = () => {\n  _s();\n  const [scannedData, setScannedData] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [error, setError] = useState('');\n  const [cameras, setCameras] = useState([]);\n  const [selectedCamera, setSelectedCamera] = useState('');\n  const [debugInfo, setDebugInfo] = useState(null);\n  const [showDebug, setShowDebug] = useState(false);\n  const videoRef = useRef(null);\n  const qrScannerRef = useRef(null);\n  useEffect(() => {\n    // Load available cameras on component mount\n    loadCameras();\n    return () => {\n      // Cleanup scanner on component unmount\n      if (qrScannerRef.current) {\n        qrScannerRef.current.stop();\n        qrScannerRef.current.destroy();\n      }\n    };\n  }, []);\n  const loadCameras = async () => {\n    try {\n      const availableCameras = await QrScanner.listCameras(true);\n\n      // Create debug information\n      const debugData = {\n        totalCameras: availableCameras.length,\n        allCameras: availableCameras.map(cam => ({\n          label: cam.label,\n          id: cam.id,\n          facingMode: cam.facingMode\n        })),\n        filteredCameras: []\n      };\n\n      // Filter for only back-facing cameras\n      const backCameras = availableCameras.filter(camera => {\n        const label = camera.label.toLowerCase();\n        const facingMode = camera.facingMode;\n\n        // Check for back-facing indicators (more inclusive for Samsung devices)\n        const isBackCamera = label.includes('back') || label.includes('environment') || label.includes('rear') || label.includes('telephoto') || label.includes('zoom') || label.includes('wide') || label.includes('ultra') || facingMode === 'environment' ||\n        // If no clear indication, exclude cameras that are clearly front-facing\n        !label.includes('front') && !label.includes('user') && !label.includes('face') && !label.includes('selfie') && facingMode !== 'user';\n        if (isBackCamera) {\n          debugData.filteredCameras.push({\n            label: camera.label,\n            id: camera.id,\n            facingMode: camera.facingMode\n          });\n        }\n        return isBackCamera;\n      });\n      setDebugInfo(debugData);\n\n      // Rename cameras to simple \"Camera 1\", \"Camera 2\", etc.\n      const renamedCameras = backCameras.map((camera, index) => ({\n        ...camera,\n        displayName: `Camera ${index + 1}`\n      }));\n      setCameras(renamedCameras);\n      if (renamedCameras.length > 0) {\n        // Select the first back camera\n        setSelectedCamera(renamedCameras[0].id);\n      }\n    } catch (err) {\n      console.log('Could not load cameras:', err);\n    }\n  };\n  const startScanning = async () => {\n    try {\n      setError('');\n      setIsScanning(true);\n\n      // Check if camera is available\n      const hasCamera = await QrScanner.hasCamera();\n      if (!hasCamera) {\n        throw new Error('No camera found on this device');\n      }\n\n      // Initialize QR scanner with selected camera\n      qrScannerRef.current = new QrScanner(videoRef.current, result => {\n        setScannedData(result.data);\n        stopScanning();\n      }, {\n        onDecodeError: error => {\n          // Ignore decode errors while scanning\n          console.log('Decode error:', error);\n        },\n        highlightScanRegion: true,\n        highlightCodeOutline: true,\n        preferredCamera: selectedCamera || 'environment'\n      });\n      await qrScannerRef.current.start();\n    } catch (err) {\n      setError(`Failed to start camera: ${err.message}`);\n      setIsScanning(false);\n    }\n  };\n  const stopScanning = () => {\n    if (qrScannerRef.current) {\n      qrScannerRef.current.stop();\n    }\n    setIsScanning(false);\n  };\n  const switchCamera = async cameraId => {\n    const wasScanning = isScanning;\n    if (wasScanning) {\n      stopScanning();\n    }\n    setSelectedCamera(cameraId);\n    if (wasScanning) {\n      // Small delay to ensure the previous scanner is fully stopped\n      setTimeout(() => {\n        startScanning();\n      }, 100);\n    }\n  };\n  const clearResult = () => {\n    setScannedData('');\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qr-scanner-container\",\n    children: [cameras.length > 1 && !isScanning && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"camera-select\",\n        children: \"Choose Camera:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"camera-select\",\n        value: selectedCamera,\n        onChange: e => switchCamera(e.target.value),\n        className: \"camera-select\",\n        children: cameras.map(camera => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: camera.id,\n          children: camera.displayName\n        }, camera.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanner-controls\",\n      children: [!isScanning ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startScanning,\n        className: \"scan-button\",\n        children: \"Start Scanning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopScanning,\n        className: \"stop-button\",\n        children: \"Stop Scanning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), (scannedData || error) && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearResult,\n        className: \"clear-button\",\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), debugInfo && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowDebug(!showDebug),\n        className: \"debug-button\",\n        children: [showDebug ? 'Hide' : 'Show', \" Camera Info\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), showDebug && debugInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debug-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Camera Detection Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Total cameras found:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 14\n        }, this), \" \", debugInfo.totalCameras]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Back cameras available:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 14\n        }, this), \" \", debugInfo.filteredCameras.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"All Detected Cameras:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, this), debugInfo.allCameras.map((cam, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Camera \", index + 1, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Label: \", cam.label]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Facing Mode: \", cam.facingMode || 'not specified']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"ID: \", cam.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debug-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Filtered Back Cameras:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 13\n        }, this), debugInfo.filteredCameras.map((cam, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"camera-info filtered\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [\"Selected Camera \", index + 1, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Label: \", cam.label]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Facing Mode: \", cam.facingMode || 'not specified']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"ID: \", cam.id]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 9\n    }, this), isScanning && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        className: \"scanner-video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scanner-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scanner-frame\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 9\n    }, this), scannedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Scanned Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: scannedData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 11\n      }, this), scannedData.startsWith('http') && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: scannedData,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"link-button\",\n        children: \"Open Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"32W37ORsmQ4KkdebqX9IAx8e1U4=\");\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","useRef","useEffect","QrScanner","jsxDEV","_jsxDEV","QRScanner","_s","scannedData","setScannedData","isScanning","setIsScanning","error","setError","cameras","setCameras","selectedCamera","setSelectedCamera","debugInfo","setDebugInfo","showDebug","setShowDebug","videoRef","qrScannerRef","loadCameras","current","stop","destroy","availableCameras","listCameras","debugData","totalCameras","length","allCameras","map","cam","label","id","facingMode","filteredCameras","backCameras","filter","camera","toLowerCase","isBackCamera","includes","push","renamedCameras","index","displayName","err","console","log","startScanning","hasCamera","Error","result","data","stopScanning","onDecodeError","highlightScanRegion","highlightCodeOutline","preferredCamera","start","message","switchCamera","cameraId","wasScanning","setTimeout","clearResult","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","ref","startsWith","href","rel","_c","$RefreshReg$"],"sources":["/Users/n.hnid/Desktop/Master/QRScannerTest/src/components/QRScanner.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport QrScanner from 'qr-scanner';\nimport './QRScanner.css';\n\nconst QRScanner = () => {\n  const [scannedData, setScannedData] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [error, setError] = useState('');\n  const [cameras, setCameras] = useState([]);\n  const [selectedCamera, setSelectedCamera] = useState('');\n  const [debugInfo, setDebugInfo] = useState(null);\n  const [showDebug, setShowDebug] = useState(false);\n  const videoRef = useRef(null);\n  const qrScannerRef = useRef(null);\n\n  useEffect(() => {\n    // Load available cameras on component mount\n    loadCameras();\n    \n    return () => {\n      // Cleanup scanner on component unmount\n      if (qrScannerRef.current) {\n        qrScannerRef.current.stop();\n        qrScannerRef.current.destroy();\n      }\n    };\n  }, []);\n\n  const loadCameras = async () => {\n    try {\n      const availableCameras = await QrScanner.listCameras(true);\n      \n      // Create debug information\n      const debugData = {\n        totalCameras: availableCameras.length,\n        allCameras: availableCameras.map(cam => ({\n          label: cam.label,\n          id: cam.id,\n          facingMode: cam.facingMode\n        })),\n        filteredCameras: []\n      };\n      \n      // Filter for only back-facing cameras\n      const backCameras = availableCameras.filter(camera => {\n        const label = camera.label.toLowerCase();\n        const facingMode = camera.facingMode;\n        \n        // Check for back-facing indicators (more inclusive for Samsung devices)\n        const isBackCamera = (\n          label.includes('back') || \n          label.includes('environment') ||\n          label.includes('rear') ||\n          label.includes('telephoto') ||\n          label.includes('zoom') ||\n          label.includes('wide') ||\n          label.includes('ultra') ||\n          facingMode === 'environment' ||\n          // If no clear indication, exclude cameras that are clearly front-facing\n          (!label.includes('front') && !label.includes('user') && !label.includes('face') && !label.includes('selfie') && facingMode !== 'user')\n        );\n        \n        if (isBackCamera) {\n          debugData.filteredCameras.push({\n            label: camera.label,\n            id: camera.id,\n            facingMode: camera.facingMode\n          });\n        }\n        \n        return isBackCamera;\n      });\n      \n      setDebugInfo(debugData);\n      \n      // Rename cameras to simple \"Camera 1\", \"Camera 2\", etc.\n      const renamedCameras = backCameras.map((camera, index) => ({\n        ...camera,\n        displayName: `Camera ${index + 1}`\n      }));\n      \n      setCameras(renamedCameras);\n      \n      if (renamedCameras.length > 0) {\n        // Select the first back camera\n        setSelectedCamera(renamedCameras[0].id);\n      }\n    } catch (err) {\n      console.log('Could not load cameras:', err);\n    }\n  };\n\n  const startScanning = async () => {\n    try {\n      setError('');\n      setIsScanning(true);\n\n      // Check if camera is available\n      const hasCamera = await QrScanner.hasCamera();\n      if (!hasCamera) {\n        throw new Error('No camera found on this device');\n      }\n\n      // Initialize QR scanner with selected camera\n      qrScannerRef.current = new QrScanner(\n        videoRef.current,\n        (result) => {\n          setScannedData(result.data);\n          stopScanning();\n        },\n        {\n          onDecodeError: (error) => {\n            // Ignore decode errors while scanning\n            console.log('Decode error:', error);\n          },\n          highlightScanRegion: true,\n          highlightCodeOutline: true,\n          preferredCamera: selectedCamera || 'environment',\n        }\n      );\n\n      await qrScannerRef.current.start();\n    } catch (err) {\n      setError(`Failed to start camera: ${err.message}`);\n      setIsScanning(false);\n    }\n  };\n\n  const stopScanning = () => {\n    if (qrScannerRef.current) {\n      qrScannerRef.current.stop();\n    }\n    setIsScanning(false);\n  };\n\n  const switchCamera = async (cameraId) => {\n    const wasScanning = isScanning;\n    if (wasScanning) {\n      stopScanning();\n    }\n    setSelectedCamera(cameraId);\n    if (wasScanning) {\n      // Small delay to ensure the previous scanner is fully stopped\n      setTimeout(() => {\n        startScanning();\n      }, 100);\n    }\n  };\n\n  const clearResult = () => {\n    setScannedData('');\n    setError('');\n  };\n\n  return (\n    <div className=\"qr-scanner-container\">\n      {/* Camera Selection */}\n      {cameras.length > 1 && !isScanning && (\n        <div className=\"camera-selection\">\n          <label htmlFor=\"camera-select\">Choose Camera:</label>\n          <select\n            id=\"camera-select\"\n            value={selectedCamera}\n            onChange={(e) => switchCamera(e.target.value)}\n            className=\"camera-select\"\n          >\n            {cameras.map((camera) => (\n              <option key={camera.id} value={camera.id}>\n                {camera.displayName}\n              </option>\n            ))}\n          </select>\n        </div>\n      )}\n\n      <div className=\"scanner-controls\">\n        {!isScanning ? (\n          <button onClick={startScanning} className=\"scan-button\">\n            Start Scanning\n          </button>\n        ) : (\n          <button onClick={stopScanning} className=\"stop-button\">\n            Stop Scanning\n          </button>\n        )}\n        \n        {(scannedData || error) && (\n          <button onClick={clearResult} className=\"clear-button\">\n            Clear\n          </button>\n        )}\n        \n        {debugInfo && (\n          <button \n            onClick={() => setShowDebug(!showDebug)} \n            className=\"debug-button\"\n          >\n            {showDebug ? 'Hide' : 'Show'} Camera Info\n          </button>\n        )}\n      </div>\n\n      {/* Debug Information Display */}\n      {showDebug && debugInfo && (\n        <div className=\"debug-info\">\n          <h3>Camera Detection Info</h3>\n          <p><strong>Total cameras found:</strong> {debugInfo.totalCameras}</p>\n          <p><strong>Back cameras available:</strong> {debugInfo.filteredCameras.length}</p>\n          \n          <div className=\"debug-section\">\n            <h4>All Detected Cameras:</h4>\n            {debugInfo.allCameras.map((cam, index) => (\n              <div key={index} className=\"camera-info\">\n                <p><strong>Camera {index + 1}:</strong></p>\n                <p>Label: {cam.label}</p>\n                <p>Facing Mode: {cam.facingMode || 'not specified'}</p>\n                <p>ID: {cam.id}</p>\n              </div>\n            ))}\n          </div>\n          \n          <div className=\"debug-section\">\n            <h4>Filtered Back Cameras:</h4>\n            {debugInfo.filteredCameras.map((cam, index) => (\n              <div key={index} className=\"camera-info filtered\">\n                <p><strong>Selected Camera {index + 1}:</strong></p>\n                <p>Label: {cam.label}</p>\n                <p>Facing Mode: {cam.facingMode || 'not specified'}</p>\n                <p>ID: {cam.id}</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n\n      {isScanning && (\n        <div className=\"video-container\">\n          <video ref={videoRef} className=\"scanner-video\"></video>\n          <div className=\"scanner-overlay\">\n            <div className=\"scanner-frame\"></div>\n          </div>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"error-message\">\n          <h3>Error</h3>\n          <p>{error}</p>\n        </div>\n      )}\n\n      {scannedData && (\n        <div className=\"result-container\">\n          <h3>Scanned Content:</h3>\n          <div className=\"result-content\">\n            <p>{scannedData}</p>\n          </div>\n          {scannedData.startsWith('http') && (\n            <a \n              href={scannedData} \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"link-button\"\n            >\n              Open Link\n            </a>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default QRScanner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}