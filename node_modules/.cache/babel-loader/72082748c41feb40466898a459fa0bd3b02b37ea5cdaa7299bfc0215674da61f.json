{"ast":null,"code":"var _jsxFileName = \"/Users/n.hnid/Desktop/Master/QRScannerTest/src/components/QRScanner.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport QrScanner from 'qr-scanner';\nimport './QRScanner.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRScanner = () => {\n  _s();\n  const [scannedData, setScannedData] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [error, setError] = useState('');\n  const [cameras, setCameras] = useState([]);\n  const [selectedCamera, setSelectedCamera] = useState('');\n  const videoRef = useRef(null);\n  const qrScannerRef = useRef(null);\n  useEffect(() => {\n    // Load available cameras on component mount\n    loadCameras();\n    return () => {\n      // Cleanup scanner on component unmount\n      if (qrScannerRef.current) {\n        qrScannerRef.current.stop();\n        qrScannerRef.current.destroy();\n      }\n    };\n  }, []);\n  const loadCameras = async () => {\n    try {\n      const availableCameras = await QrScanner.listCameras(true);\n\n      // Filter for only back-facing cameras\n      const backCameras = availableCameras.filter(camera => {\n        const label = camera.label.toLowerCase();\n        const facingMode = camera.facingMode;\n\n        // Check for back-facing indicators (Samsung-optimized)\n        const isBackCamera = label.includes('back') || label.includes('environment') || label.includes('rear') || label.includes('telephoto') || label.includes('zoom') || label.includes('wide') || label.includes('ultra') || label.includes('facing back') ||\n        // Samsung specific\n        facingMode === 'environment' ||\n        // Samsung cameras often start with \"camera\" and don't have front indicators\n        label.startsWith('camera') && !label.includes('front') && !label.includes('user') && !label.includes('face') && !label.includes('selfie') && facingMode !== 'user';\n        return isBackCamera;\n      });\n\n      // Rename cameras to simple \"Camera 1\", \"Camera 2\", etc.\n      const renamedCameras = backCameras.map((camera, index) => ({\n        ...camera,\n        displayName: `Camera ${index + 1}`\n      }));\n      setCameras(renamedCameras);\n      if (renamedCameras.length > 0) {\n        // Select the first back camera\n        setSelectedCamera(renamedCameras[0].id);\n      }\n    } catch (err) {\n      console.log('Could not load cameras:', err);\n    }\n  };\n  const startScanning = async () => {\n    try {\n      setError('');\n      setIsScanning(true);\n\n      // Check if camera is available\n      const hasCamera = await QrScanner.hasCamera();\n      if (!hasCamera) {\n        throw new Error('No camera found on this device');\n      }\n\n      // Initialize QR scanner with selected camera\n      qrScannerRef.current = new QrScanner(videoRef.current, result => {\n        setScannedData(result.data);\n        stopScanning();\n      }, {\n        onDecodeError: error => {\n          // Ignore decode errors while scanning\n          console.log('Decode error:', error);\n        },\n        highlightScanRegion: true,\n        highlightCodeOutline: true,\n        preferredCamera: selectedCamera || 'environment'\n      });\n      await qrScannerRef.current.start();\n    } catch (err) {\n      setError(`Failed to start camera: ${err.message}`);\n      setIsScanning(false);\n    }\n  };\n  const stopScanning = () => {\n    if (qrScannerRef.current) {\n      qrScannerRef.current.stop();\n    }\n    setIsScanning(false);\n  };\n  const switchCamera = async cameraId => {\n    const wasScanning = isScanning;\n    if (wasScanning) {\n      stopScanning();\n    }\n    setSelectedCamera(cameraId);\n    if (wasScanning) {\n      // Small delay to ensure the previous scanner is fully stopped\n      setTimeout(() => {\n        startScanning();\n      }, 100);\n    }\n  };\n  const clearResult = () => {\n    setScannedData('');\n    setError('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qr-scanner-container\",\n    children: [cameras.length > 1 && !isScanning && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"camera-selection\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"camera-select\",\n        children: \"Choose Camera:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"camera-select\",\n        value: selectedCamera,\n        onChange: e => switchCamera(e.target.value),\n        className: \"camera-select\",\n        children: cameras.map(camera => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: camera.id,\n          children: camera.displayName\n        }, camera.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scanner-controls\",\n      children: [!isScanning ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startScanning,\n        className: \"scan-button\",\n        children: \"Start Scanning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopScanning,\n        className: \"stop-button\",\n        children: \"Stop Scanning\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this), (scannedData || error) && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: clearResult,\n        className: \"clear-button\",\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), isScanning && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"video-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: videoRef,\n        className: \"scanner-video\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"scanner-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"scanner-frame\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 9\n    }, this), scannedData && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Scanned Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-content\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: scannedData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), scannedData.startsWith('http') && /*#__PURE__*/_jsxDEV(\"a\", {\n        href: scannedData,\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"link-button\",\n        children: \"Open Link\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(QRScanner, \"hqOszwnXkTVPoHnTgLzR2xYc5gY=\");\n_c = QRScanner;\nexport default QRScanner;\nvar _c;\n$RefreshReg$(_c, \"QRScanner\");","map":{"version":3,"names":["React","useState","useRef","useEffect","QrScanner","jsxDEV","_jsxDEV","QRScanner","_s","scannedData","setScannedData","isScanning","setIsScanning","error","setError","cameras","setCameras","selectedCamera","setSelectedCamera","videoRef","qrScannerRef","loadCameras","current","stop","destroy","availableCameras","listCameras","backCameras","filter","camera","label","toLowerCase","facingMode","isBackCamera","includes","startsWith","renamedCameras","map","index","displayName","length","id","err","console","log","startScanning","hasCamera","Error","result","data","stopScanning","onDecodeError","highlightScanRegion","highlightCodeOutline","preferredCamera","start","message","switchCamera","cameraId","wasScanning","setTimeout","clearResult","className","children","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","ref","href","rel","_c","$RefreshReg$"],"sources":["/Users/n.hnid/Desktop/Master/QRScannerTest/src/components/QRScanner.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport QrScanner from 'qr-scanner';\nimport './QRScanner.css';\n\nconst QRScanner = () => {\n  const [scannedData, setScannedData] = useState('');\n  const [isScanning, setIsScanning] = useState(false);\n  const [error, setError] = useState('');\n  const [cameras, setCameras] = useState([]);\n  const [selectedCamera, setSelectedCamera] = useState('');\n  const videoRef = useRef(null);\n  const qrScannerRef = useRef(null);\n\n  useEffect(() => {\n    // Load available cameras on component mount\n    loadCameras();\n    \n    return () => {\n      // Cleanup scanner on component unmount\n      if (qrScannerRef.current) {\n        qrScannerRef.current.stop();\n        qrScannerRef.current.destroy();\n      }\n    };\n  }, []);\n\n  const loadCameras = async () => {\n    try {\n      const availableCameras = await QrScanner.listCameras(true);\n      \n      // Filter for only back-facing cameras\n      const backCameras = availableCameras.filter(camera => {\n        const label = camera.label.toLowerCase();\n        const facingMode = camera.facingMode;\n        \n        // Check for back-facing indicators (Samsung-optimized)\n        const isBackCamera = (\n          label.includes('back') || \n          label.includes('environment') ||\n          label.includes('rear') ||\n          label.includes('telephoto') ||\n          label.includes('zoom') ||\n          label.includes('wide') ||\n          label.includes('ultra') ||\n          label.includes('facing back') ||  // Samsung specific\n          facingMode === 'environment' ||\n          // Samsung cameras often start with \"camera\" and don't have front indicators\n          (label.startsWith('camera') && !label.includes('front') && !label.includes('user') && !label.includes('face') && !label.includes('selfie') && facingMode !== 'user')\n        );\n        \n        return isBackCamera;\n      });\n      \n      // Rename cameras to simple \"Camera 1\", \"Camera 2\", etc.\n      const renamedCameras = backCameras.map((camera, index) => ({\n        ...camera,\n        displayName: `Camera ${index + 1}`\n      }));\n      \n      setCameras(renamedCameras);\n      \n      if (renamedCameras.length > 0) {\n        // Select the first back camera\n        setSelectedCamera(renamedCameras[0].id);\n      }\n    } catch (err) {\n      console.log('Could not load cameras:', err);\n    }\n  };\n\n  const startScanning = async () => {\n    try {\n      setError('');\n      setIsScanning(true);\n\n      // Check if camera is available\n      const hasCamera = await QrScanner.hasCamera();\n      if (!hasCamera) {\n        throw new Error('No camera found on this device');\n      }\n\n      // Initialize QR scanner with selected camera\n      qrScannerRef.current = new QrScanner(\n        videoRef.current,\n        (result) => {\n          setScannedData(result.data);\n          stopScanning();\n        },\n        {\n          onDecodeError: (error) => {\n            // Ignore decode errors while scanning\n            console.log('Decode error:', error);\n          },\n          highlightScanRegion: true,\n          highlightCodeOutline: true,\n          preferredCamera: selectedCamera || 'environment',\n        }\n      );\n\n      await qrScannerRef.current.start();\n    } catch (err) {\n      setError(`Failed to start camera: ${err.message}`);\n      setIsScanning(false);\n    }\n  };\n\n  const stopScanning = () => {\n    if (qrScannerRef.current) {\n      qrScannerRef.current.stop();\n    }\n    setIsScanning(false);\n  };\n\n  const switchCamera = async (cameraId) => {\n    const wasScanning = isScanning;\n    if (wasScanning) {\n      stopScanning();\n    }\n    setSelectedCamera(cameraId);\n    if (wasScanning) {\n      // Small delay to ensure the previous scanner is fully stopped\n      setTimeout(() => {\n        startScanning();\n      }, 100);\n    }\n  };\n\n  const clearResult = () => {\n    setScannedData('');\n    setError('');\n  };\n\n  return (\n    <div className=\"qr-scanner-container\">\n      {/* Camera Selection */}\n      {cameras.length > 1 && !isScanning && (\n        <div className=\"camera-selection\">\n          <label htmlFor=\"camera-select\">Choose Camera:</label>\n          <select\n            id=\"camera-select\"\n            value={selectedCamera}\n            onChange={(e) => switchCamera(e.target.value)}\n            className=\"camera-select\"\n          >\n            {cameras.map((camera) => (\n              <option key={camera.id} value={camera.id}>\n                {camera.displayName}\n              </option>\n            ))}\n          </select>\n        </div>\n      )}\n\n      <div className=\"scanner-controls\">\n        {!isScanning ? (\n          <button onClick={startScanning} className=\"scan-button\">\n            Start Scanning\n          </button>\n        ) : (\n          <button onClick={stopScanning} className=\"stop-button\">\n            Stop Scanning\n          </button>\n        )}\n        \n        {(scannedData || error) && (\n          <button onClick={clearResult} className=\"clear-button\">\n            Clear\n          </button>\n        )}\n      </div>\n\n      {isScanning && (\n        <div className=\"video-container\">\n          <video ref={videoRef} className=\"scanner-video\"></video>\n          <div className=\"scanner-overlay\">\n            <div className=\"scanner-frame\"></div>\n          </div>\n        </div>\n      )}\n\n      {error && (\n        <div className=\"error-message\">\n          <h3>Error</h3>\n          <p>{error}</p>\n        </div>\n      )}\n\n      {scannedData && (\n        <div className=\"result-container\">\n          <h3>Scanned Content:</h3>\n          <div className=\"result-content\">\n            <p>{scannedData}</p>\n          </div>\n          {scannedData.startsWith('http') && (\n            <a \n              href={scannedData} \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"link-button\"\n            >\n              Open Link\n            </a>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default QRScanner;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}